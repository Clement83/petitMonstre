#if !defined (AllMonsterSprite_H)
#define AllMonsterSprite_H


const byte BigFootBotBack[] PROGMEM = {24,24,0x0,0x0,0x0,0x3F,0xFF,0xF8,0x21,0x55,0x8,0x23,0xFF,0x88,0x23,0x1,0x88,0x36,0xBA,0xD8,0x2A,0x44,0xA8,0x2A,0x44,0xA8,0x36,0x44,0xD8,0x22,0xBA,0x88,0x23,0x1,0x88,0x23,0xEF,0x88,0x21,0x39,0x8,0x3F,0x83,0xF8,0x0,0x92,0x0,0x0,0x92,0x0,0x4,0x92,0x40,0x2,0x92,0x80,0x1,0x93,0x0,0xFC,0x92,0x7E,0xB4,0x82,0x5A,0xFF,0x83,0xFE,0xB0,0x0,0x1A,0xFF,0xFF,0xFE,};
const byte BigFootBotFront[] PROGMEM = {24,24,0x0,0x0,0x0,0x3F,0xFF,0xF8,0x20,0x0,0x8,0x23,0x1,0x88,0x23,0x1,0x88,0x30,0x38,0x18,0x28,0x7C,0x28,0x28,0x10,0x28,0x30,0x0,0x18,0x23,0xFF,0x88,0x22,0xAA,0x88,0x23,0xFF,0x88,0x20,0x0,0x8,0x3F,0x83,0xF8,0x0,0x92,0x0,0x0,0x92,0x0,0x4,0x92,0x40,0x2,0x92,0x80,0x1,0x93,0x0,0xFC,0x92,0x7E,0x94,0x82,0x52,0xF7,0x83,0xDE,0x90,0x0,0x12,0xFF,0xFF,0xFE,};

const byte ChampiDureBack[] PROGMEM = {24,24,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xFF,0xC0,0x7,0xC8,0xF8,0x1E,0x8,0x3E,0x3F,0xFF,0xFF,0x7F,0xE3,0xFF,0x5C,0x22,0xE,0x4C,0x22,0xC,0x5F,0xE3,0x78,0x73,0xE3,0xFD,0x33,0x63,0x47,0x1E,0x23,0x2E,0xF,0xE1,0xFC,0x1,0xE3,0xE0,0x1,0xE1,0xC0,0x7,0x80,0x70,0x8,0x0,0x18,0x8,0x0,0xC,0x10,0x7F,0x6,0x30,0xE3,0x86,0x7F,0xE3,0xFF,0xE7,0xC1,0xE7,0x88,0x0,0x11,};
const byte ChampiDureFront[] PROGMEM = {24,24,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0xFF,0xC0,0x7,0xC8,0xF8,0x1E,0x8,0x3E,0x33,0xFF,0xF3,0x77,0xE3,0xFB,0x5C,0x0,0xF,0x4C,0x73,0x8D,0x5F,0x73,0xB9,0x73,0x0,0x3D,0x33,0x0,0x47,0x1E,0x1E,0x2E,0xF,0x80,0x7C,0x1,0xE3,0xE0,0x0,0xE1,0xC0,0x7,0x80,0x70,0x8,0x0,0x18,0x8,0x0,0xC,0x10,0x7F,0x6,0x30,0xE3,0x86,0x7F,0xE3,0xFF,0xE7,0xC1,0xE7,0x88,0x0,0x11,};

const byte DalekomonBack[] PROGMEM = {24,24,0x0,0x0,0x0,0x0,0x0,0x0,0x3,0xF0,0x60,0xE,0x1F,0xC0,0x18,0xC,0x60,0x30,0x4,0x0,0x20,0x6,0x0,0x24,0x42,0x0,0x2E,0xE2,0xC,0x24,0x42,0x38,0x20,0x1F,0xF8,0x20,0x1,0xC,0x20,0x1,0x80,0x24,0x44,0xC0,0x2E,0xEE,0x60,0x24,0x44,0x30,0x20,0x0,0x18,0x20,0x0,0x4,0x7F,0xFF,0xFE,0xD5,0x55,0x53,0x80,0x0,0x1,0xC0,0x0,0x3,0x6A,0xAA,0xAE,0x3F,0xFF,0xFC,};
const byte DalekomonFront[] PROGMEM = {24,24,0x0,0x0,0x0,0x0,0x0,0x0,0x6,0xF,0xC0,0x3,0xF8,0x70,0x6,0x30,0x18,0x0,0x20,0xC,0x0,0x60,0x4,0x0,0x42,0x24,0x30,0x47,0x74,0x1C,0x42,0x24,0x1F,0xF8,0x4,0x30,0x80,0x4,0x1,0x80,0x4,0x3,0x22,0x24,0x6,0x77,0x74,0xC,0x22,0x24,0x18,0x0,0x4,0x20,0x0,0x4,0x7F,0xFF,0xFE,0xCA,0xAA,0xAB,0x80,0x0,0x1,0xC0,0x0,0x3,0x75,0x55,0x56,0x3F,0xFF,0xFC,};

const byte EpargnomonBack[] PROGMEM = {24,24,0x0,0x1,0x0,0xFF,0xF9,0xC0,0xFF,0xF1,0xF8,0x0,0xF1,0xDC,0xFF,0xE1,0xFF,0xFF,0xE3,0xFF,0x3,0xE3,0xF8,0xFF,0xE3,0xF0,0xFF,0xE3,0xF0,0x7,0xE3,0xF0,0xFF,0xE3,0xF0,0xFF,0xE3,0xFF,0x1F,0xE7,0xF8,0x1F,0xE7,0xF0,0x3F,0xE7,0xF0,0x3F,0xE7,0xF8,0x3F,0xE7,0xFE,0x3F,0xEF,0xFE,0x3F,0xEF,0xFE,0x3F,0xFF,0xFE,0x3F,0xFF,0xFC,0x1F,0xFF,0xFC,0xF,0xFF,0xFF,0xF,0xFF,0xFF,};
const byte EpargnomonFront[] PROGMEM = {24,24,0x0,0x80,0x0,0x3,0x9F,0xFF,0x1F,0x8F,0xFF,0x3B,0x8F,0x0,0xFF,0x87,0xFF,0xFF,0xC7,0xFF,0x1F,0xC7,0xC0,0xF,0xC7,0xFF,0xF,0xC7,0xFF,0xF,0xC7,0xE0,0xF,0xC7,0xFF,0xFF,0xC7,0xFF,0x1F,0xE7,0xF8,0xF,0xE7,0xF8,0xF,0xE7,0xFC,0x1F,0xE7,0xFC,0x7F,0xE7,0xFC,0x7F,0xF7,0xFC,0x7F,0xF7,0xFC,0x7F,0xFF,0xFC,0x3F,0xFF,0xFC,0x3F,0xFF,0xF8,0xFF,0xFF,0xF0,0xFF,0xFF,0xF0,};

const byte FlottilleBack[] PROGMEM = {24,24,0x0,0x0,0x0,0x0,0x30,0x0,0x0,0x3C,0x0,0xE0,0x27,0x0,0x98,0x20,0x80,0x8E,0x23,0xE0,0x83,0x3C,0x38,0x91,0xD8,0x3C,0x98,0xF0,0x1E,0x4C,0xB0,0x13,0x64,0xC0,0x1F,0x26,0x60,0xD,0x22,0x20,0x3,0x22,0x67,0xE2,0x62,0xEC,0x62,0x46,0x88,0xC4,0x4C,0xC9,0x84,0x88,0xE7,0xC,0x99,0xB0,0x38,0x9B,0x98,0xF0,0x8E,0xF,0x80,0xB8,0x0,0x0,0xE0,0x0,0x0,0xC0,0x0,0x0,};
const byte FlottilleFront[] PROGMEM = {24,24,0x0,0x0,0x0,0x0,0xC,0x0,0x0,0x3C,0x0,0x0,0xE4,0x7,0x1,0x4,0x19,0x7,0xC4,0x71,0x1C,0x3C,0xC1,0x3C,0x1B,0x89,0x70,0xF,0x19,0xC6,0xD,0x32,0x8A,0x3,0x26,0x86,0x6,0x64,0xF0,0x34,0x44,0xD8,0x56,0x44,0x88,0x97,0x46,0x89,0x11,0x62,0x99,0xF3,0x32,0xF0,0x7,0x11,0xC0,0xD,0x99,0x7F,0x19,0xD9,0x1D,0xF0,0x71,0x0,0x0,0x1D,0x0,0x0,0x7,0x0,0x0,0x3,};

const byte MantyBack[] PROGMEM = {24,24,0x1,0xFF,0x80,0x1,0x5A,0x80,0x1,0xFF,0x80,0x1,0x5A,0x80,0x1,0xFF,0x80,0x0,0x18,0x0,0x0,0x18,0x0,0xFF,0x18,0xFF,0x19,0x18,0x98,0xFF,0xFF,0xFF,0x19,0x18,0x98,0xFF,0x18,0xFF,0x0,0x18,0x0,0x0,0x18,0x0,0x1F,0xFF,0xF8,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x66,0x18,0x18,0x42,0x18,0x18,0x0,0x18,0xFE,0x0,0x7F,0xAA,0x0,0x55,};
const byte MantyFront[] PROGMEM = {24,24,0x1,0xFF,0x80,0x1,0x18,0x80,0x1,0x5A,0x80,0x1,0x18,0x80,0x1,0xFF,0x80,0x0,0x18,0x0,0x0,0x18,0x0,0xFF,0x18,0xFF,0x19,0x18,0x98,0xF9,0xFF,0x9F,0x19,0x18,0x98,0xFF,0x18,0xFF,0x0,0x18,0x0,0x0,0x18,0x0,0x1F,0xFF,0xF8,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x66,0x18,0x18,0x42,0x18,0x18,0x0,0x18,0xFE,0x0,0x7F,0xAA,0x0,0x55,};

const byte MechebizardBack[] PROGMEM = {24,24,0x0,0x8,0x0,0x0,0x34,0x0,0x0,0x34,0x0,0x0,0x6E,0x0,0x0,0x6E,0x0,0x1,0xF7,0x80,0x3,0x10,0xC0,0x6,0x38,0x60,0xC,0x6C,0x30,0x8,0x46,0x18,0x18,0x83,0x8,0x31,0x11,0x8C,0x21,0x18,0xC4,0x61,0x2C,0x46,0x41,0x28,0x42,0x43,0x28,0x43,0xC6,0x24,0x51,0x8C,0x26,0x7D,0x8C,0x66,0x25,0xBC,0xD7,0x35,0xA8,0xBB,0x1F,0xE8,0xA8,0x9,0x88,0x0,0x9,0xFF,0xFF,0xFF,};
const byte MechebizardFront[] PROGMEM = {24,24,0x0,0x8,0x0,0x0,0x34,0x0,0x0,0x34,0x0,0x0,0x6E,0x0,0x0,0x6E,0x0,0x1,0xE7,0x80,0x3,0x18,0xC0,0x6,0x8,0x60,0xC,0x8,0x30,0x8,0x0,0x18,0x18,0x0,0x8,0x31,0xE3,0xCC,0x20,0x63,0x4,0x60,0x63,0x6,0x40,0x0,0x2,0x40,0x0,0x3,0xC0,0x0,0x1,0x80,0x0,0x1,0x80,0x0,0x1,0xF8,0xFE,0x1F,0x84,0xE0,0x21,0xFC,0xE0,0x3F,0xAA,0x0,0x55,0xFF,0xFF,0xFF,};

const byte OctoSpaceFront[] PROGMEM = {24,24,0x0,0x0,0x0,0x60,0x0,0xC,0x60,0x0,0x1C,0x1C,0xFF,0x70,0x7,0x81,0xC0,0x4,0x0,0x40,0xC,0xFE,0x60,0x18,0x7C,0x30,0x10,0x38,0x18,0x10,0x10,0x8,0x10,0x0,0x8,0x13,0xFF,0xC8,0x10,0x99,0x8,0x1F,0xFF,0xF8,0x4,0x4A,0x20,0x4,0x5B,0x30,0xC,0xD1,0x10,0x8,0x99,0x90,0x10,0x88,0x98,0x31,0x98,0xC8,0x21,0x10,0x4A,0x63,0x18,0x6C,0x40,0x8,0x0,0x0,0x0,0x0,};
const byte OctoSpaceBack[] PROGMEM = {24,24,0x0,0x0,0x0,0x60,0x0,0xC,0x60,0x0,0x1C,0x1C,0xFF,0x70,0x7,0x81,0xC0,0x4,0x3C,0x40,0xC,0x0,0x60,0x18,0xFF,0x30,0x10,0x0,0x18,0x11,0xFF,0x88,0x10,0x0,0x8,0x13,0xFF,0xC8,0x10,0x0,0x8,0x1F,0xFF,0xF8,0x4,0x4A,0x20,0x4,0x5B,0x30,0xC,0xD1,0x10,0x8,0x99,0x90,0x10,0x88,0x98,0x31,0x98,0xC8,0x21,0x10,0x4A,0x63,0x18,0x6C,0x40,0x8,0x0,0x0,0x0,0x0,};

const byte PsymonFront[] PROGMEM = {24,24,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1E,0x0,0x18,0x12,0x0,0x3C,0x33,0x0,0x66,0x21,0x0,0xC2,0x61,0x0,0x82,0x41,0x9C,0xBB,0xDC,0xB6,0x89,0x90,0xE3,0x89,0x90,0xD5,0xA9,0x94,0xC1,0xA9,0x94,0xC9,0xA9,0x90,0xE3,0x89,0xD0,0xB6,0x89,0x5D,0x9C,0xBB,0x61,0x0,0x82,0x21,0x0,0xC2,0x33,0x0,0x42,0x12,0x0,0x66,0x1E,0x0,0x3C,0x0,0x0,0x18,0x0,0x0,0x0,};
const byte PsymonBack[] PROGMEM = {24,24,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1E,0x0,0x18,0x12,0x0,0x3C,0x33,0x0,0x66,0x21,0x0,0xC2,0x65,0x0,0x8A,0x45,0x9C,0xBB,0xDC,0xB6,0xA9,0x94,0xE3,0xAD,0xB4,0xC9,0xAD,0xB4,0xDD,0xAD,0xB4,0xC9,0xAD,0x94,0xE3,0xAD,0xD4,0xB6,0xA9,0x5D,0x9C,0xBB,0x65,0x0,0x8A,0x21,0x0,0xC2,0x33,0x0,0x42,0x12,0x0,0x66,0x1E,0x0,0x3C,0x0,0x0,0x18,0x0,0x0,0x0,};

const byte ReactoromonBack[] PROGMEM = {24,24,0x2,0x81,0x40,0x6,0xFF,0x60,0xE,0xC3,0x70,0x1A,0xFF,0x58,0x32,0x0,0x4C,0x63,0xFF,0xC6,0xC2,0x0,0x43,0x82,0x0,0x41,0x85,0x0,0xA1,0xF8,0xFF,0x1F,0x85,0x18,0xA1,0x82,0x18,0x41,0x82,0x24,0x41,0xFF,0xFF,0xFF,0x41,0x94,0x62,0x27,0x14,0x34,0x1C,0x76,0x18,0x18,0xCB,0xC,0x11,0xA1,0x84,0x1D,0x14,0x9C,0x1,0x8B,0x0,0x0,0x62,0x0,0x0,0x34,0x0,0x0,0x8,0x0,};
const byte ReactoromonFront[] PROGMEM = {24,24,0x1,0x41,0x40,0x7,0xFF,0xE0,0xC,0x0,0x30,0x19,0xE7,0x98,0x31,0x42,0x8C,0x61,0xC3,0x86,0xC0,0x0,0x3,0x80,0x3C,0x1,0x90,0x0,0x9,0xB9,0xFF,0xDD,0x91,0x55,0x49,0x81,0xFF,0xC1,0x81,0x55,0x41,0xFF,0xFF,0xFF,0x41,0x94,0x62,0x27,0x14,0x34,0x1C,0x66,0x18,0x18,0xC3,0xC,0x10,0x94,0x84,0x1C,0x48,0x9C,0x0,0x63,0x0,0x0,0x22,0x0,0x0,0x14,0x0,0x0,0x8,0x0,};

const byte TerrabafleBack[] PROGMEM = {24,24,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x55,0x45,0x54,0x55,0x45,0x54,0x55,0x45,0x54,0x7F,0xC7,0xFC,0x40,0x44,0x4,0x40,0x44,0x4,0x7D,0xC7,0xDC,0x5,0x0,0x50,0x5,0x0,0x50,0xF,0x1C,0x50,0x9,0xB6,0xD8,0x18,0xEB,0x88,0x17,0x94,0xC8,0x1C,0x26,0x78,0x32,0x6B,0x18,0x76,0x89,0xDE,0x44,0xDE,0x43,0xC5,0xD2,0x59,0xCD,0x13,0x4D,0x89,0x20,0x61,0xFF,0xFF,0xFF,};
const byte TerrabafleFront[] PROGMEM = {24,24,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x55,0x45,0x54,0x55,0x45,0x54,0x55,0x45,0x54,0x7F,0xC7,0xFC,0x40,0x44,0x4,0x40,0x44,0x4,0x7D,0xC7,0xDC,0x5,0x0,0x50,0x5,0x0,0x50,0xF,0x1C,0x50,0x9,0xB6,0xD8,0x18,0xE3,0x88,0x17,0x80,0xC8,0x1C,0x0,0x78,0x31,0xFF,0x98,0x78,0xE7,0x1E,0x4C,0x42,0x33,0xC4,0x0,0x61,0xFE,0x7C,0x7F,0xAB,0x0,0x55,0xFF,0xFF,0xFF,};




/*
const byte* const allSpriteMonstersFront[4] PROGMEM = {
  sprMecheBizardFront,
  sprFlottilleFront,
  sprChampiFortFront,
  sprTerraBaffleFront,
};

const byte* const allSpriteMonstersBack[4] PROGMEM = {
  sprMecheBizardBack,
  sprFlottilleBack,
  sprChampiFortBack,
  sprTerraBaffleBack,
};*/


const byte* const GetSpriteMonsterByNumero(uint8_t num, bool isFront)
{
	switch(num)
	{
		case 0 : 
                if(isFront) return MechebizardFront;
                return MechebizardBack;
		break;
		case 1 : 
                if(isFront) return FlottilleFront;
                return FlottilleBack;
		break;
		case 2 : 
                if(isFront) return ChampiDureFront;
                return ChampiDureBack;
		break;
		case 3 : 
                if(isFront) return TerrabafleFront;
                return TerrabafleBack;
		break;
		case 4 : 
                if(isFront) return BigFootBotFront;
                return BigFootBotBack;
		break;
		case 5 : 
                if(isFront) return DalekomonFront;
                return DalekomonBack;
		break;
		case 6 : 
                if(isFront) return EpargnomonFront;
                return EpargnomonBack;
		break;
		case 7 : 
                if(isFront) return MantyFront;
                return MantyBack;
		break;
		case 8 : 
                if(isFront) return OctoSpaceFront;
                return OctoSpaceBack;
		break;
		case 9 : 
                if(isFront) return PsymonFront;
                return PsymonBack;
		break;
		case 10 : 
                if(isFront) return ReactoromonFront;
                return ReactoromonBack;
		break;
	}
}











const byte attaqueGriffe[] PROGMEM = {16,16,
B00000000,B00000000,
B00000000,B00000000,
B00000000,B00000000,
B00000111,B11000000,
B00011100,B00000000,
B00110000,B00010000,
B00100000,B11110000,
B01100011,B10000000,
B01001100,B00000000,
B00011000,B00111000,
B00010000,B11100000,
B00010001,B10000000,
B00000011,B00000000,
B00000010,B00000000,
B00000000,B00000000,
B00000000,B00000000,
};


#endif 

