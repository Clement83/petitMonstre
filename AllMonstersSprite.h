#if !defined (AllMonsterSprite_H)
#define AllMonsterSprite_H


#define Nb_MONSTERS 10
/*
const byte CubeCrocBack[] PROGMEM = {24,24,0x7F,0xFF,0xE0,0x8A,0x5,0x10,0x8E,0x7,0x10,0x8A,0x5,0x10,0x8E,0x7,0x10,0x8A,0x5,0x10,0xFF,0xFF,0xF0,0x92,0x49,0x30,0xFF,0xFF,0xF0,0x80,0x0,0x10,0xFF,0xFF,0xF0,0x99,0x99,0x90,0x99,0x99,0x90,0xE6,0x66,0x70,0xE6,0x66,0x70,0xFF,0xFF,0xF0,0x80,0x0,0x10,0x80,0x0,0x10,0xFF,0xFF,0xF0,0x12,0x2,0x40,0x1E,0x3,0xC0,0x12,0x2,0x40,0x1E,0x3,0xC0,0x12,0x2,0x40,};
const byte CubeCrocFront[] PROGMEM = {24,24,0x7F,0xFF,0xE0,0x90,0x0,0x90,0xA8,0x1,0x50,0x90,0x60,0x90,0x80,0x60,0x10,0x80,0x0,0x10,0xFF,0xFF,0xF0,0x92,0x49,0x30,0xFF,0xFF,0xF0,0x80,0x0,0x10,0xFF,0xFF,0xF0,0x99,0x99,0x90,0x99,0x99,0x90,0xE6,0x66,0x70,0xE6,0x66,0x70,0xFF,0xFF,0xF0,0x80,0x0,0x10,0x80,0x0,0x10,0xFF,0xFF,0xF0,0x12,0x2,0x40,0x1E,0x3,0xC0,0x12,0x2,0x40,0x1E,0x3,0xC0,0x12,0x2,0x40,};
const byte EscargotBack[] PROGMEM = {24,22,0x7,0xFE,0x0,0xC,0x3,0x80,0x10,0x30,0xC0,0x21,0xDC,0x60,0x66,0x6,0x20,0x4C,0x2,0x20,0x58,0x3,0x27,0xD0,0x61,0x15,0x90,0xF1,0x97,0x90,0x90,0x92,0x90,0x10,0xB2,0xD8,0x10,0xA2,0x4E,0x30,0xA2,0x43,0xE0,0xA6,0x60,0x0,0xA4,0x20,0x1,0xA4,0x18,0x7,0xBE,0x7,0xFC,0x73,0xFC,0x0,0x1,0x80,0x0,0x1,0xE0,0x0,0x1,0x3F,0xFF,0xFF,};
const byte EscargotFront[] PROGMEM = {24,22,0x0,0x7F,0xE0,0x1,0xC0,0x30,0x3,0xC,0x8,0x6,0x3B,0x84,0x4,0x60,0x66,0x4,0x40,0x32,0xE4,0xC0,0x1A,0xA8,0x86,0xB,0xE9,0x8F,0x9,0x49,0x9,0x9,0x4D,0x8,0x9,0x45,0x8,0x1B,0x45,0xC,0x72,0x65,0x7,0xC2,0x25,0x0,0x6,0x25,0x80,0x4,0x7D,0xE0,0x18,0xCE,0x3F,0xE0,0x80,0x0,0x3F,0x80,0x0,0x1,0x80,0x0,0x7,0xFF,0xFF,0xFC,};
const byte FlottilleBack[] PROGMEM = {24,22,0x0,0x30,0x0,0x0,0x3C,0x0,0xE0,0x27,0x0,0x98,0x20,0x80,0x8E,0x23,0xE0,0x83,0x3C,0x38,0x91,0xD8,0x3C,0x98,0xF0,0x1E,0x4C,0xB0,0x13,0x64,0xC0,0x1F,0x26,0x60,0xD,0x22,0x20,0x3,0x22,0x67,0xE2,0x62,0xEC,0x62,0x46,0x88,0xC4,0x4C,0xC9,0x84,0x88,0xE7,0xC,0x99,0xB0,0x38,0x9B,0x98,0xF0,0x8E,0xF,0x80,0xB8,0x0,0x0,0xE0,0x0,0x0,};
const byte FlottilleFront[] PROGMEM = {24,22,0x0,0xC,0x0,0x0,0x3C,0x0,0x0,0xE4,0x7,0x1,0x4,0x19,0x7,0xC4,0x71,0x1C,0x3C,0xC1,0x3C,0x1B,0x89,0x70,0xF,0x19,0xC6,0xD,0x32,0x8A,0x3,0x26,0x86,0x6,0x64,0xF0,0x34,0x44,0xD8,0x56,0x44,0x88,0x97,0x46,0x89,0x11,0x62,0x99,0xF3,0x32,0xF0,0x7,0x11,0xC0,0xD,0x99,0x7F,0x19,0xD9,0x1D,0xF0,0x71,0x0,0x0,0x1D,0x0,0x0,0x7,};
const byte OctoSpaceBack[] PROGMEM = {24,21,0xC0,0x0,0x18,0xC0,0x0,0x38,0x39,0xFE,0xE0,0xF,0x3,0x80,0x8,0x78,0x80,0x18,0x0,0xC0,0x31,0xFE,0x60,0x20,0x0,0x30,0x23,0xFF,0x10,0x20,0x0,0x10,0x27,0xFF,0x90,0x20,0x0,0x10,0x3F,0xFF,0xF0,0x8,0x94,0x40,0x8,0xB6,0x60,0x19,0xA2,0x20,0x11,0x33,0x20,0x21,0x11,0x30,0x63,0x31,0x90,0x42,0x20,0x90,0xC6,0x30,0xD8,};
const byte OctoSpaceFront[] PROGMEM = {24,21,0xC0,0x0,0x18,0xC0,0x0,0x38,0x39,0xFE,0xE0,0xF,0x3,0x80,0x8,0x0,0x80,0x19,0xFC,0xC0,0x30,0xF8,0x60,0x20,0x70,0x30,0x20,0x20,0x10,0x20,0x0,0x10,0x27,0xFF,0x90,0x21,0x32,0x10,0x3F,0xFF,0xF0,0x8,0x94,0x40,0x8,0xB6,0x60,0x19,0xA2,0x20,0x11,0x33,0x20,0x21,0x11,0x30,0x63,0x31,0x90,0x42,0x20,0x90,0xC6,0x30,0xD8,};
const byte DalekomonBack[] PROGMEM = {24,22,0x3,0xF0,0x60,0xE,0x1F,0xC0,0x18,0xC,0x60,0x30,0x4,0x0,0x20,0x6,0x0,0x24,0x42,0x0,0x2E,0xE2,0xC,0x24,0x42,0x38,0x20,0x1F,0xF8,0x20,0x1,0xC,0x20,0x1,0x80,0x24,0x44,0xC0,0x2E,0xEE,0x60,0x24,0x44,0x30,0x20,0x0,0x18,0x20,0x0,0x4,0x7F,0xFF,0xFE,0xD5,0x55,0x53,0x80,0x0,0x1,0xC0,0x0,0x3,0x6A,0xAA,0xAE,0x3F,0xFF,0xFC,};
const byte DalekomonFront[] PROGMEM = {24,22,0x6,0xF,0xC0,0x3,0xF8,0x70,0x6,0x30,0x18,0x0,0x20,0xC,0x0,0x60,0x4,0x0,0x42,0x24,0x30,0x47,0x74,0x1C,0x42,0x24,0x1F,0xF8,0x4,0x30,0x80,0x4,0x1,0x80,0x4,0x3,0x22,0x24,0x6,0x77,0x74,0xC,0x22,0x24,0x18,0x0,0x4,0x20,0x0,0x4,0x7F,0xFF,0xFE,0xCA,0xAA,0xAB,0x80,0x0,0x1,0xC0,0x0,0x3,0x75,0x55,0x56,0x3F,0xFF,0xFC,};
const byte ElectromignonBack[] PROGMEM = {24,24,0x7F,0x8F,0xF0,0x50,0xA8,0x50,0x70,0xA8,0x70,0x0,0xF8,0x0,0x0,0x84,0xC,0x81,0x2,0x18,0xC1,0x2,0x30,0x60,0x84,0x20,0x3B,0x4B,0x40,0xC,0x30,0x80,0x4,0x0,0x80,0x2,0x69,0x0,0x3,0x4B,0x0,0x4,0x84,0x80,0x4,0x48,0x80,0x2,0x1,0x0,0x3,0x3,0x0,0x4,0x78,0x80,0x4,0x48,0x80,0x2,0xCD,0x0,0x1,0x4A,0x0,0x1,0x4A,0x0,0x1,0x4A,0x0,0x1,0xCE,0x0,};
const byte ElectromignonFront[] PROGMEM = {24,24,0x7F,0x8F,0xF0,0x50,0xA8,0x50,0x70,0xA8,0x70,0x0,0xF8,0x0,0x0,0x84,0x0,0x81,0x4A,0x4,0xC1,0x2,0x8,0x60,0xB4,0x18,0x33,0x4B,0x60,0xC,0x30,0x80,0x4,0x0,0x80,0x2,0x49,0x0,0x2,0xB5,0x0,0x4,0x84,0x80,0x4,0x48,0x80,0x2,0x31,0x0,0x3,0x3,0x0,0x4,0x78,0x80,0x4,0x48,0x80,0x2,0xCD,0x0,0x1,0x4A,0x0,0x1,0x4A,0x0,0x1,0x4A,0x0,0x1,0xCE,0x0,};
const byte GetLineBack[] PROGMEM = {24,24,0x7,0x7,0x0,0x7,0x7,0x0,0x3,0x8E,0x0,0x0,0x88,0x0,0xC,0x89,0x80,0xC,0x89,0x80,0x7C,0x89,0xF0,0x7C,0x89,0xF0,0x7F,0xFF,0xF0,0x7F,0xFF,0xF0,0xF,0xFF,0x80,0x7F,0xFF,0xF0,0x7F,0xFF,0xF0,0x6F,0xFF,0xB0,0x7F,0xFF,0xF0,0x79,0x8C,0xF0,0xF,0x87,0x80,0x1F,0x7,0xC0,0x3E,0x3,0xC0,0x7C,0x3,0xE0,0x7C,0x1,0xF0,0xF8,0x0,0xF0,0xE0,0x0,0xF8,0x80,0x0,0x8,};
const byte GetLineFront[] PROGMEM = {24,24,0x7,0x7,0x0,0x5,0x5,0x0,0x3,0x8E,0x0,0x0,0x88,0x0,0xC,0x89,0x80,0xC,0x89,0x80,0x7C,0x89,0xF0,0x4C,0x89,0x90,0x4F,0xFF,0x90,0x7D,0x55,0xF0,0xD,0x55,0x80,0x7D,0x55,0xF0,0x55,0x55,0x50,0x6F,0xFF,0xB0,0x57,0xFF,0x50,0x7F,0x8F,0xF0,0xF,0x87,0x80,0x1F,0x7,0xC0,0x3E,0x3,0xC0,0x7C,0x3,0xE0,0x7C,0x1,0xF0,0xF8,0x0,0xF0,0xE0,0x0,0xF8,0x80,0x0,0x8,};
const byte MonoBotBack[] PROGMEM = {24,23,0x7F,0xFF,0xF8,0x60,0x84,0x18,0x51,0xFE,0x28,0x4A,0x1,0x48,0x7F,0xFF,0xF8,0x0,0x30,0x0,0x0,0x30,0x0,0x1F,0xFF,0xE0,0x34,0x84,0xB0,0x69,0x32,0x58,0xEE,0x49,0xDC,0x8A,0x85,0x4C,0x8F,0x3,0xC4,0x80,0x0,0x4,0x81,0xFE,0x4,0x82,0x1,0x4,0x84,0x78,0x8C,0xC0,0x84,0x38,0x70,0xFC,0xE0,0x1F,0x87,0x80,0x0,0xFC,0x0,0x0,0x84,0x0,0x0,0x78,0x0,};
const byte MonoBotFront[] PROGMEM = {24,23,0x7F,0xFF,0xF8,0x40,0x0,0x8,0x5F,0xCF,0xE8,0x40,0x0,0x8,0x7F,0xFF,0xF8,0x0,0x30,0x0,0x0,0x30,0x0,0x1F,0xFF,0xE0,0x30,0x0,0x30,0x60,0x0,0x18,0xE0,0x0,0x1C,0xFF,0x3,0xFC,0x88,0x84,0x44,0x8F,0x87,0xC4,0x88,0x84,0x44,0xFF,0x3,0xFC,0x80,0x78,0xC,0xC0,0x84,0x38,0x70,0xFC,0xE0,0x1F,0x87,0x80,0x0,0xFC,0x0,0x0,0x84,0x0,0x0,0x78,0x0,};
const byte ReactoromonBack[] PROGMEM = {24,24,0x2,0x81,0x40,0x6,0xFF,0x60,0xE,0xC3,0x70,0x1A,0xFF,0x58,0x32,0x0,0x4C,0x63,0xFF,0xC6,0xC2,0x0,0x43,0x82,0x0,0x41,0x85,0x0,0xA1,0xF8,0xFF,0x1F,0x85,0x18,0xA1,0x82,0x18,0x41,0x82,0x24,0x41,0xFF,0xFF,0xFF,0x41,0x94,0x62,0x27,0x14,0x34,0x1C,0x76,0x18,0x18,0xCB,0xC,0x11,0xA1,0x84,0x1D,0x14,0x9C,0x1,0x8B,0x0,0x0,0x62,0x0,0x0,0x34,0x0,0x0,0x8,0x0,};
const byte ReactoromonFront[] PROGMEM = {24,24,0x1,0x41,0x40,0x7,0xFF,0xE0,0xC,0x0,0x30,0x19,0xE7,0x98,0x31,0x42,0x8C,0x61,0xC3,0x86,0xC0,0x0,0x3,0x80,0x3C,0x1,0x90,0x0,0x9,0xB9,0xFF,0xDD,0x91,0x55,0x49,0x81,0xFF,0xC1,0x81,0x55,0x41,0xFF,0xFF,0xFF,0x41,0x94,0x62,0x27,0x14,0x34,0x1C,0x66,0x18,0x18,0xC3,0xC,0x10,0x94,0x84,0x1C,0x48,0x9C,0x0,0x63,0x0,0x0,0x22,0x0,0x0,0x14,0x0,0x0,0x8,0x0,};
//const byte EpargnomonBack[] PROGMEM = {24,20,0x0,0x8,0x0,0xFF,0xCF,0x80,0x3,0xCE,0xC0,0xFF,0x8F,0xF0,0xFF,0x8F,0xF0,0x7,0x8F,0x80,0xFF,0x8F,0x80,0xF,0x8F,0x80,0xFF,0x8F,0x80,0xFF,0x8F,0xF0,0x3F,0x9F,0x80,0x3F,0x9F,0x80,0x3F,0x9F,0x80,0x3F,0x9F,0xE0,0x3F,0xBF,0xE0,0x3F,0xBF,0xE0,0x3F,0xFF,0xE0,0x3F,0xFF,0xC0,0x1F,0xFF,0xF0,0x1F,0xFF,0xF0,};
//const byte EpargnomonFront[] PROGMEM = {24,20,0x2,0x0,0x0,0x1E,0x7F,0xF0,0x36,0x38,0x0,0xFE,0x1F,0xF0,0xFF,0x1F,0xF0,0x3F,0x1E,0x0,0x1F,0x1F,0xF0,0x1F,0x1F,0x0,0x1F,0x1F,0xF0,0xFF,0x1F,0xF0,0x3F,0x9F,0x80,0x1F,0x9F,0xC0,0x1F,0x9F,0xC0,0x7F,0x9F,0xC0,0x7F,0xDF,0xC0,0x7F,0xDF,0xC0,0x7F,0xFF,0xC0,0x3F,0xFF,0xC0,0xFF,0xFF,0x80,0xFF,0xFF,0x80,};
const byte LapiDodoBack[] PROGMEM = {24,20,0x3C,0x7,0x80,0x24,0x4,0x80,0x42,0x8,0x40,0x5A,0xB,0x40,0x5A,0xB,0x40,0x5A,0xEB,0x40,0x5B,0x1B,0x40,0x58,0x3,0x40,0x46,0xC,0x40,0x4C,0xE6,0x40,0x48,0x2,0x40,0x40,0x0,0x40,0x3F,0xFF,0x80,0x62,0x50,0xE0,0x9A,0x53,0x90,0xCE,0x5E,0x30,0x86,0x58,0x10,0xC0,0x0,0x30,0x80,0xE0,0x10,0xFF,0x1F,0xF0,};
const byte LapiDodoFront[] PROGMEM = {24,20,0x3C,0x7,0x80,0x24,0x4,0x80,0x42,0x8,0x40,0x5A,0xB,0x40,0x5A,0xB,0x40,0x42,0xE8,0x40,0x43,0x18,0x40,0x5E,0xF,0x40,0x4A,0xA,0x40,0x4A,0xA,0x40,0x4F,0x1E,0x40,0x40,0x0,0x40,0x3F,0xFF,0x80,0x62,0x50,0xE0,0x9A,0x53,0x90,0xCE,0x5E,0x30,0x86,0x58,0x10,0xC0,0x0,0x30,0x80,0xE0,0x10,0xFF,0x1F,0xF0,};
const byte MechebizardBack[] PROGMEM = {24,20,0x0,0x20,0x0,0x0,0xD0,0x0,0x0,0xB0,0x0,0x1,0xB0,0x0,0x3,0xDC,0x0,0x4,0x46,0x0,0x8,0xE3,0x0,0x11,0x10,0x80,0x33,0x18,0xC0,0x62,0x4C,0x40,0x42,0x66,0x40,0x42,0xA2,0x20,0xC6,0xA2,0x30,0xCC,0xB2,0x10,0x98,0x93,0xD0,0x99,0x91,0x50,0xBB,0x59,0xF0,0xD2,0xA0,0xD0,0x90,0x0,0x90,0xFF,0xFF,0xF0,};
const byte MechebizardFront[] PROGMEM = {24,20,0x0,0x20,0x0,0x0,0xD0,0x0,0x0,0xB0,0x0,0x1,0xB0,0x0,0x3,0x9C,0x0,0x4,0x66,0x0,0x8,0x23,0x0,0x10,0x0,0x80,0x30,0x0,0x80,0x63,0x8E,0x40,0x41,0x8C,0x40,0x40,0x88,0x20,0x40,0x0,0x30,0xC0,0x0,0x10,0x80,0x0,0x10,0x80,0x0,0x10,0x81,0xF0,0x10,0xF9,0x81,0xF0,0x94,0x2,0x90,0xFF,0xFF,0xF0,};
const byte MittraillatorBack[] PROGMEM = {24,24,0x8,0x1,0x0,0x99,0xC,0x90,0xD6,0x6,0xA0,0x44,0x2,0xB0,0xA8,0x1,0x50,0xAB,0x9D,0x50,0xFB,0x9D,0xF0,0xCB,0xFD,0x30,0xAB,0xD,0x50,0x9B,0x9D,0x90,0xFE,0x67,0xF0,0xC0,0xE0,0x30,0x79,0xB1,0xE0,0xF,0x1F,0x0,0x3,0xFE,0x0,0x2,0x2,0x0,0x2,0x72,0x0,0x6,0x8B,0x0,0xA,0x8A,0x80,0x12,0x8A,0x40,0xFE,0x8B,0xF0,0xA8,0x89,0x50,0x80,0x88,0x10,0xFF,0x8F,0xF0,};
const byte MittraillatorFront[] PROGMEM = {24,24,0x8,0x1,0x0,0x99,0xC,0x90,0xD6,0x6,0xA0,0x44,0x2,0xB0,0xA8,0x1,0x50,0xAB,0x9D,0x50,0xFA,0x95,0xF0,0x8B,0xFD,0x10,0x8A,0x55,0x10,0x8A,0x55,0x10,0xFE,0x7,0xF0,0xC0,0xA0,0x30,0x78,0xA1,0xE0,0xE,0xA7,0x0,0x3,0xFE,0x0,0x2,0x2,0x0,0x2,0x72,0x0,0x6,0x8B,0x0,0xA,0x8A,0x80,0x12,0x8A,0x40,0xFE,0x8B,0xF0,0xA8,0x89,0x50,0x80,0x88,0x10,0xFF,0x8F,0xF0,};
const byte BlouyeateBack[] PROGMEM = {24,24,0xF,0xFF,0xE0,0xA,0xAA,0xA0,0xF,0xFF,0xE0,0xA,0x0,0xA0,0xE,0xFE,0xE0,0xA,0x0,0xA0,0xF,0xFF,0xE0,0x39,0xCE,0x38,0x42,0x31,0x4,0x8C,0x48,0xC2,0x42,0x31,0x4,0x39,0xCE,0x38,0x10,0x84,0x10,0x21,0x32,0x48,0x42,0x49,0x24,0x42,0x49,0x24,0x21,0x32,0x48,0x10,0x84,0x10,0xE,0x78,0xE0,0x10,0x84,0x10,0x21,0x2,0x8,0x3F,0xFF,0xF8,0x1,0x83,0x0,0x1,0x83,0x0,};
const byte BlouyeateFront[] PROGMEM = {24,24,0xF,0xFF,0xE0,0xA,0xAA,0xA0,0xF,0xFF,0xE0,0xA,0x0,0xA0,0xE,0x44,0xE0,0xA,0x0,0xA0,0xF,0xFF,0xE0,0x38,0x0,0x38,0x40,0x0,0x4,0x81,0xC7,0x2,0x41,0x45,0x4,0x39,0x45,0x38,0x11,0x45,0x10,0x21,0xC7,0x8,0x40,0x0,0x4,0x40,0x38,0x4,0x20,0x28,0x8,0x10,0x28,0x10,0xD,0xFF,0x60,0x11,0x55,0x10,0x21,0x55,0x8,0x3F,0xFF,0xF8,0x1,0x83,0x0,0x1,0x83,0x0,};
const byte ChampiDureBack[] PROGMEM = {24,22,0x0,0xFF,0xC0,0x7,0xC8,0xF8,0x1E,0x8,0x3E,0x3B,0xFF,0xF3,0x77,0xE2,0x7B,0x5C,0x22,0xF,0x4C,0x22,0xD,0x5F,0xE2,0x79,0x73,0xE3,0xED,0x33,0x63,0x47,0x1E,0x23,0x2E,0xF,0xE1,0x7C,0x1,0xE3,0xE0,0x1,0xE1,0xC0,0x7,0x80,0x70,0x8,0x0,0x18,0x8,0x0,0xC,0x10,0x7F,0x6,0x30,0xE3,0x86,0x7F,0xE3,0xFF,0xE7,0xC1,0xE7,0x88,0x0,0x11,};
const byte ChampiDureFront[] PROGMEM = {24,22,0x0,0xFF,0xC0,0x7,0xC8,0xF8,0x1E,0x8,0x3E,0x33,0xFF,0xF3,0x77,0xE3,0xFB,0x5C,0x0,0xF,0x4C,0x73,0x8D,0x5F,0x73,0xB9,0x73,0x0,0x3D,0x33,0x0,0x47,0x1E,0x1E,0x2E,0xF,0x80,0x7C,0x1,0xE3,0xE0,0x0,0xE1,0xC0,0x7,0x80,0x70,0x8,0x0,0x18,0x8,0x0,0xC,0x10,0x7F,0x6,0x30,0xE3,0x86,0x7F,0xE3,0xFF,0xE7,0xC1,0xE7,0x88,0x0,0x11,};
const byte RacinoideBack[] PROGMEM = {16,20,0x5,0x0,0xA,0x80,0x8,0x80,0x5,0x0,0x2,0x0,0x1F,0x80,0x30,0xF0,0x25,0x10,0x28,0x50,0x28,0x50,0x24,0xA0,0x30,0xA0,0x15,0x20,0x1A,0x60,0xD,0x40,0x4,0xC0,0x6,0xB8,0x7D,0xEC,0xC5,0x44,0x89,0x24,};
const byte RacinoideFront[] PROGMEM = {16,20,0x5,0x0,0xA,0x80,0x8,0x80,0x5,0x0,0x2,0x0,0x1F,0x80,0x30,0xF0,0x20,0x10,0x2D,0x90,0x20,0x10,0x22,0x20,0x32,0x20,0x10,0x20,0x18,0x60,0xC,0x40,0x4,0xC0,0x6,0xB8,0x7D,0xEC,0xC5,0x44,0x89,0x24,};
const byte TerrabafleBack[] PROGMEM = {24,21,0x55,0x45,0x54,0x55,0x45,0x54,0x55,0x45,0x54,0x7F,0xC7,0xFC,0x40,0x44,0x4,0x40,0x44,0x4,0x7D,0xC7,0xDC,0x5,0x0,0x50,0x5,0x0,0x50,0xF,0x1C,0x50,0x9,0xB6,0xD8,0x18,0xEB,0x88,0x17,0x94,0xC8,0x1C,0x26,0x78,0x32,0x6B,0x18,0x76,0x89,0xDE,0x44,0xDE,0x43,0xC5,0xD2,0x59,0xCD,0x13,0x4D,0x89,0x20,0x61,0xFF,0xFF,0xFF,};
const byte TerrabafleFront[] PROGMEM = {24,21,0x55,0x45,0x54,0x55,0x45,0x54,0x55,0x45,0x54,0x7F,0xC7,0xFC,0x40,0x44,0x4,0x40,0x44,0x4,0x7D,0xC7,0xDC,0x5,0x0,0x50,0x5,0x0,0x50,0xF,0x1C,0x50,0x9,0xB6,0xD8,0x18,0xE3,0x88,0x17,0x80,0xC8,0x1C,0x0,0x78,0x31,0xFF,0x98,0x78,0xE7,0x1E,0x4C,0x42,0x33,0xC4,0x0,0x61,0xFE,0x7C,0x7F,0xAB,0x0,0x55,0xFF,0xFF,0xFF,};
const byte VielleBrancheBack[] PROGMEM = {24,24,0x0,0x78,0x0,0x7,0xCF,0x0,0x8,0x1,0xC0,0x10,0x0,0x60,0x31,0x20,0x30,0x21,0x22,0x18,0x43,0x42,0x8,0x63,0x4C,0x48,0x39,0x79,0xC8,0x2F,0xB3,0x8,0x20,0xDE,0x88,0x30,0x7F,0x90,0x18,0x30,0x10,0xF,0x60,0x30,0x41,0x47,0xEC,0x65,0x64,0x30,0x3F,0xFF,0xCC,0x29,0x24,0x78,0xE9,0x26,0x10,0x89,0x22,0x1C,0x81,0x36,0xE0,0x79,0x37,0xB8,0xCF,0x76,0xCC,0x88,0xC3,0x60,};
const byte VielleBrancheFront[] PROGMEM = {24,24,0x0,0x78,0x0,0x7,0xCF,0x0,0x8,0x1,0xC0,0x10,0x6,0x60,0x33,0x83,0xB0,0x26,0x0,0x18,0x40,0xC6,0x8,0x63,0xEF,0x8,0x20,0x0,0x8,0x22,0x0,0x8,0x22,0x0,0x8,0x33,0xF8,0xD0,0x18,0x3,0x90,0xF,0x0,0x30,0x41,0x7,0xEC,0x65,0x4,0x30,0x3F,0xDF,0xCC,0x29,0x4,0x78,0xE9,0x6,0x10,0x89,0x22,0x1C,0x81,0x36,0xE0,0x79,0x37,0xB8,0xCF,0x76,0xCC,0x88,0xC3,0x60,};
const byte ChicFortBack[] PROGMEM = {16,23,0xFF,0xE0,0xFF,0xE0,0xA0,0xA0,0xA0,0xA0,0x91,0x20,0x8A,0x20,0x84,0x20,0x8A,0x20,0x91,0x20,0xA0,0xA0,0xC0,0x60,0xFF,0xE0,0x84,0x20,0xFF,0xE0,0x80,0x20,0x80,0x20,0x80,0x20,0xFF,0xE0,0xFF,0xE0,0x20,0x80,0x20,0x80,0x20,0x80,0x20,0x80,};
const byte ChicFortFront[] PROGMEM = {16,23,0xFF,0xE0,0x80,0x20,0xBB,0xA0,0xAA,0xA0,0x80,0x20,0x8E,0x20,0x80,0x20,0xD5,0x60,0xAA,0xA0,0x80,0x20,0x80,0x20,0xFF,0xE0,0x9F,0x20,0x8E,0x20,0x8E,0x20,0x84,0x20,0x80,0x20,0xFF,0xE0,0xFF,0xE0,0x20,0x80,0x20,0x80,0x20,0x80,0x20,0x80,};
const byte PolsanBack[] PROGMEM = {24,24,0x7,0x38,0x0,0x5,0x28,0x0,0x7,0x38,0x0,0x2,0x10,0x0,0x2,0x10,0x0,0x2,0x10,0x0,0x3,0xF8,0x0,0x7,0x5C,0x0,0x5,0x54,0x0,0x5,0x54,0x0,0x5,0x54,0x0,0x3F,0xFF,0x80,0x40,0x0,0x40,0x3F,0xFF,0x80,0x10,0x1,0x0,0x30,0xA1,0x80,0x60,0x40,0xC0,0x40,0xA0,0x40,0x40,0x0,0x40,0x40,0x0,0x40,0xD4,0x5,0x60,0x88,0x2,0x20,0x94,0x5,0x20,0x80,0x0,0x20,};
const byte PolsanFront[] PROGMEM = {24,24,0x7,0x38,0x0,0x5,0x28,0x0,0x7,0x38,0x0,0x2,0x10,0x0,0x2,0x10,0x0,0x2,0x10,0x0,0x3,0xF8,0x0,0x6,0xC,0x0,0x4,0xA4,0x0,0x4,0x4,0x0,0x4,0x4,0x0,0x3F,0xFF,0x80,0x40,0x0,0x40,0x3F,0xFF,0x80,0x10,0x1,0x0,0x30,0xA1,0x80,0x60,0x40,0xC0,0x40,0xA0,0x40,0x40,0x0,0x40,0x40,0xA0,0x40,0xC0,0x40,0x60,0x80,0xA0,0x20,0x80,0x0,0x20,0xFF,0xFF,0xE0,};
const byte PsymonBack[] PROGMEM = {24,20,0x1E,0x0,0x18,0x12,0x0,0x3C,0x33,0x0,0x66,0x21,0x0,0xC2,0x65,0x0,0x8A,0x45,0x9C,0xBB,0xDC,0xB6,0xA9,0x94,0xE3,0xAD,0xB4,0xC9,0xAD,0xB4,0xDD,0xAD,0xB4,0xC9,0xAD,0x94,0xE3,0xAD,0xD4,0xB6,0xA9,0x5D,0x9C,0xBB,0x65,0x0,0x8A,0x21,0x0,0xC2,0x33,0x0,0x42,0x12,0x0,0x66,0x1E,0x0,0x3C,0x0,0x0,0x18,};
const byte PsymonFront[] PROGMEM = {24,20,0x1E,0x0,0x18,0x12,0x0,0x3C,0x33,0x0,0x66,0x21,0x0,0xC2,0x61,0x0,0x82,0x41,0x9C,0xBB,0xDC,0xB6,0x89,0x90,0xE3,0x89,0x90,0xD5,0xA9,0x94,0xC1,0xA9,0x94,0xC9,0xA9,0x90,0xE3,0x89,0xD0,0xB6,0x89,0x5D,0x9C,0xBB,0x61,0x0,0x82,0x21,0x0,0xC2,0x33,0x0,0x42,0x12,0x0,0x66,0x1E,0x0,0x3C,0x0,0x0,0x18,};
//const byte TechElecBack[] PROGMEM = {24,24,0x10,0x78,0x0,0x77,0xC1,0xB8,0xC4,0xE,0x8,0x81,0xFB,0xC,0x23,0x1,0xC4,0x26,0x0,0xE6,0x24,0x18,0x30,0x24,0x30,0x18,0x6C,0x5,0x88,0x48,0xA4,0x8D,0x48,0xAC,0xC5,0x48,0xC0,0xD,0x2C,0x5D,0x8,0x24,0x7,0x8,0x7,0x0,0x18,0x41,0xFF,0xE2,0x58,0x0,0xE,0x4C,0x0,0x78,0x43,0xFF,0xC2,0x68,0x0,0x6,0xC,0x78,0xFC,0x7,0xCF,0x80,0x0,0x0,0x0,0x0,0x0,0x0,};
//const byte TechElecFront[] PROGMEM = {24,24,0x10,0x78,0x0,0x77,0xC1,0xB8,0xC4,0xE,0x8,0x81,0xFB,0xC,0x23,0x9,0xC4,0x26,0xF,0xE6,0x24,0x0,0x30,0x24,0x40,0x98,0x6C,0xE1,0xC8,0x48,0x40,0x8D,0x48,0x0,0x5,0x48,0x1F,0xD,0x2C,0x31,0x88,0x24,0x60,0xC8,0x7,0x0,0x18,0x41,0xFF,0xE2,0x58,0x0,0xE,0x4C,0x0,0x78,0x43,0xFF,0xC2,0x68,0x0,0x6,0xC,0x78,0xFC,0x7,0xCF,0x80,0x0,0x0,0x0,0x0,0x0,0x0,};
const byte BigEyesBack[] PROGMEM = {24,22,0xF,0xE7,0xF0,0xF,0xE7,0xF0,0xF,0xE7,0xF0,0xF,0xE7,0xF0,0xF,0xE7,0xF0,0xF,0xE7,0xF0,0x1,0x0,0x80,0x1,0x0,0x80,0x1,0x0,0x80,0x1,0x0,0x80,0x1,0x0,0x80,0x1,0x0,0x80,0x1,0x0,0x80,0x1,0x0,0x80,0x1,0x0,0x80,0xF,0xFF,0xF0,0x18,0x0,0x1C,0x39,0xFF,0x96,0x69,0xFF,0x93,0xC9,0xFF,0x91,0x8F,0xFF,0xF1,0xFE,0x0,0x7F,};
const byte BigEyesFront[] PROGMEM = {24,22,0xF,0xE7,0xF0,0x8,0x24,0x10,0x9,0x24,0x10,0x9,0x25,0x90,0x8,0x24,0x10,0xF,0xE7,0xF0,0x1,0x0,0x80,0x1,0x0,0x80,0x1,0x0,0x80,0x1,0x0,0x80,0x1,0x0,0x80,0x1,0x0,0x80,0x1,0x0,0x80,0x1,0x0,0x80,0x1,0x0,0x80,0xF,0xFF,0xF0,0x18,0x0,0x1C,0x38,0x7E,0x16,0x68,0x3C,0x13,0xC8,0x0,0x11,0x8F,0xFF,0xF1,0xFE,0x0,0x7F,};
//const byte BigFeetBack[] PROGMEM = {24,24,0xF,0xFF,0xE0,0xA,0x44,0xA0,0xA,0x44,0xA0,0xF,0xEF,0xE0,0x0,0x28,0x0,0xF7,0x29,0xDE,0x95,0x29,0x52,0xDD,0xEF,0x76,0x80,0x0,0x2,0xDD,0xEF,0x76,0x95,0x29,0x52,0xF7,0x29,0xDE,0x0,0x28,0x0,0x0,0x28,0x0,0x0,0x28,0x0,0xF,0xAB,0xF8,0x38,0xAA,0xE,0x60,0xEE,0x42,0xD2,0x7C,0x6B,0xB4,0x1,0x2B,0xA5,0x79,0xAD,0xA5,0x0,0xB5,0xA1,0x7E,0x17,0xFF,0xC3,0xFF,};
//const byte BigFeetFront[] PROGMEM = {24,24,0xF,0xFF,0xE0,0x9,0x1,0x20,0x8,0x10,0x20,0xF,0xEF,0xE0,0x0,0x28,0x0,0xF7,0x29,0xDE,0x95,0x29,0x52,0xDD,0xEF,0x76,0x80,0x0,0x2,0xDD,0xEF,0x76,0x95,0x29,0x52,0xF7,0x29,0xDE,0x0,0x28,0x0,0x0,0x28,0x0,0x0,0x28,0x0,0xF,0xAB,0xF8,0x38,0xAA,0xE,0x60,0xEE,0x2,0xC0,0x7C,0x3,0xFC,0x0,0x3F,0x80,0x0,0x1,0xFC,0x0,0x3F,0x80,0x7E,0x1,0xFF,0xC3,0xFF,};
const byte BigFootBotBack[] PROGMEM = {24,23,0x3F,0xFF,0xF8,0x21,0x55,0x8,0x23,0xFF,0x88,0x23,0x1,0x88,0x36,0xBA,0xD8,0x2A,0x44,0xA8,0x2A,0x44,0xA8,0x36,0x44,0xD8,0x22,0xBA,0x88,0x23,0x1,0x88,0x23,0xEF,0x88,0x21,0x39,0x8,0x3F,0x83,0xF8,0x0,0x92,0x0,0x0,0x92,0x0,0x4,0x92,0x40,0x2,0x92,0x80,0x1,0x93,0x0,0xFC,0x92,0x7E,0xB4,0x82,0x5A,0xFF,0x83,0xFE,0xB0,0x0,0x1A,0xFF,0xFF,0xFE,};
const byte BigFootBotFront[] PROGMEM = {24,23,0x3F,0xFF,0xF8,0x20,0x0,0x8,0x23,0x1,0x88,0x23,0x1,0x88,0x30,0x38,0x18,0x28,0x7C,0x28,0x28,0x10,0x28,0x30,0x0,0x18,0x23,0xFF,0x88,0x22,0xAA,0x88,0x23,0xFF,0x88,0x20,0x0,0x8,0x3F,0x83,0xF8,0x0,0x92,0x0,0x0,0x92,0x0,0x4,0x92,0x40,0x2,0x92,0x80,0x1,0x93,0x0,0xFC,0x92,0x7E,0x94,0x82,0x52,0xF7,0x83,0xDE,0x90,0x0,0x12,0xFF,0xFF,0xFE,};
const byte MantyBack[] PROGMEM = {24,24,0x1,0xFF,0x80,0x1,0x5A,0x80,0x1,0xFF,0x80,0x1,0x5A,0x80,0x1,0xFF,0x80,0x0,0x18,0x0,0x0,0x18,0x0,0xFF,0x18,0xFF,0x19,0x18,0x98,0xFF,0xFF,0xFF,0x19,0x18,0x98,0xFF,0x18,0xFF,0x0,0x18,0x0,0x0,0x18,0x0,0x1F,0xFF,0xF8,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x66,0x18,0x18,0x42,0x18,0x18,0x0,0x18,0xFE,0x0,0x7F,0xAA,0x0,0x55,};
const byte MantyFront[] PROGMEM = {24,24,0x1,0xFF,0x80,0x1,0x18,0x80,0x1,0x5A,0x80,0x1,0x18,0x80,0x1,0xFF,0x80,0x0,0x18,0x0,0x0,0x18,0x0,0xFF,0x18,0xFF,0x19,0x18,0x98,0xF9,0xFF,0x9F,0x19,0x18,0x98,0xFF,0x18,0xFF,0x0,0x18,0x0,0x0,0x18,0x0,0x1F,0xFF,0xF8,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x66,0x18,0x18,0x42,0x18,0x18,0x0,0x18,0xFE,0x0,0x7F,0xAA,0x0,0x55,};
const byte SaloeoyeBack[] PROGMEM = {24,24,0xFF,0xFF,0xE0,0xAA,0xAA,0xA0,0xFF,0xFF,0xE0,0xAB,0xFA,0xA0,0xFF,0xFF,0xE0,0xAB,0xFA,0xA0,0xFF,0xFF,0xE0,0xAA,0xAA,0xA0,0xFF,0xFF,0xE0,0xAA,0xAA,0xA0,0xFF,0xFF,0xE0,0xAA,0xAA,0xA0,0xFF,0xFF,0xE0,0xAA,0xAA,0xA0,0xFF,0xFF,0xE0,0xAA,0xAA,0xA0,0xFF,0xFF,0xE0,0xAA,0xAA,0xA0,0xFF,0xFF,0xE0,0xAA,0xAA,0xA0,0xFF,0xFF,0xE0,0xFF,0xFF,0xE0,0x12,0x9,0x0,0x12,0x9,0x0,};
const byte SaloeoyeFront[] PROGMEM = {24,24,0xFF,0xFF,0xE0,0xAA,0xAA,0xA0,0xFF,0xFF,0xE0,0xAB,0x1A,0xA0,0xFF,0x5F,0xE0,0xAB,0x1A,0xA0,0xFF,0xFF,0xE0,0xAA,0xAA,0xA0,0xFF,0xFF,0xE0,0xA0,0x0,0xA0,0xE7,0xFC,0xE0,0xA6,0xAC,0xA0,0xE5,0xF4,0xE0,0xA7,0x1C,0xA0,0xE5,0x14,0xE0,0xA7,0x1C,0xA0,0xE5,0x14,0xE0,0xA7,0x1C,0xA0,0xE0,0x0,0xE0,0xBF,0xFF,0xA0,0xD5,0x55,0x60,0xFF,0xFF,0xE0,0x12,0x9,0x0,0x12,0x9,0x0,};
*/

const byte BigEyesBack[] PROGMEM = {24,22,0xF,0xE7,0xF0,0xF,0xE7,0xF0,0xF,0xE7,0xF0,0xF,0xE7,0xF0,0xF,0xE7,0xF0,0xF,0xE7,0xF0,0x1,0x0,0x80,0x1,0x0,0x80,0x1,0x0,0x80,0x1,0x0,0x80,0x1,0x0,0x80,0x1,0x0,0x80,0x1,0x0,0x80,0x1,0x0,0x80,0x1,0x0,0x80,0xF,0xFF,0xF0,0x18,0x0,0x1C,0x39,0xFF,0x96,0x69,0xFF,0x93,0xC9,0xFF,0x91,0x8F,0xFF,0xF1,0xFE,0x0,0x7F,};
const byte BigEyesFront[] PROGMEM = {24,22,0xF,0xE7,0xF0,0x8,0x24,0x10,0x9,0x24,0x10,0x9,0x25,0x90,0x8,0x24,0x10,0xF,0xE7,0xF0,0x1,0x0,0x80,0x1,0x0,0x80,0x1,0x0,0x80,0x1,0x0,0x80,0x1,0x0,0x80,0x1,0x0,0x80,0x1,0x0,0x80,0x1,0x0,0x80,0x1,0x0,0x80,0xF,0xFF,0xF0,0x18,0x0,0x1C,0x38,0x7E,0x16,0x68,0x3C,0x13,0xC8,0x0,0x11,0x8F,0xFF,0xF1,0xFE,0x0,0x7F,};
const byte ChampiDureBack[] PROGMEM = {24,22,0x0,0xFF,0xC0,0x7,0xC8,0xF8,0x1E,0x8,0x3E,0x3B,0xFF,0xF3,0x77,0xE2,0x7B,0x5C,0x22,0xF,0x4C,0x22,0xD,0x5F,0xE2,0x79,0x73,0xE3,0xED,0x33,0x63,0x47,0x1E,0x23,0x2E,0xF,0xE1,0x7C,0x1,0xE3,0xE0,0x1,0xE1,0xC0,0x7,0x80,0x70,0x8,0x0,0x18,0x8,0x0,0xC,0x10,0x7F,0x6,0x30,0xE3,0x86,0x7F,0xE3,0xFF,0xE7,0xC1,0xE7,0x88,0x0,0x11,};
const byte ChampiDureFront[] PROGMEM = {24,22,0x0,0xFF,0xC0,0x7,0xC8,0xF8,0x1E,0x8,0x3E,0x33,0xFF,0xF3,0x77,0xE3,0xFB,0x5C,0x0,0xF,0x4C,0x73,0x8D,0x5F,0x73,0xB9,0x73,0x0,0x3D,0x33,0x0,0x47,0x1E,0x1E,0x2E,0xF,0x80,0x7C,0x1,0xE3,0xE0,0x0,0xE1,0xC0,0x7,0x80,0x70,0x8,0x0,0x18,0x8,0x0,0xC,0x10,0x7F,0x6,0x30,0xE3,0x86,0x7F,0xE3,0xFF,0xE7,0xC1,0xE7,0x88,0x0,0x11,};
const byte DalekomonBack[] PROGMEM = {24,22,0x3,0xF0,0x60,0xE,0x1F,0xC0,0x18,0xC,0x60,0x30,0x4,0x0,0x20,0x6,0x0,0x24,0x42,0x0,0x2E,0xE2,0xC,0x24,0x42,0x38,0x20,0x1F,0xF8,0x20,0x1,0xC,0x20,0x1,0x80,0x24,0x44,0xC0,0x2E,0xEE,0x60,0x24,0x44,0x30,0x20,0x0,0x18,0x20,0x0,0x4,0x7F,0xFF,0xFE,0xD5,0x55,0x53,0x80,0x0,0x1,0xC0,0x0,0x3,0x6A,0xAA,0xAE,0x3F,0xFF,0xFC,};
const byte DalekomonFront[] PROGMEM = {24,22,0x6,0xF,0xC0,0x3,0xF8,0x70,0x6,0x30,0x18,0x0,0x20,0xC,0x0,0x60,0x4,0x0,0x42,0x24,0x30,0x47,0x74,0x1C,0x42,0x24,0x1F,0xF8,0x4,0x30,0x80,0x4,0x1,0x80,0x4,0x3,0x22,0x24,0x6,0x77,0x74,0xC,0x22,0x24,0x18,0x0,0x4,0x20,0x0,0x4,0x7F,0xFF,0xFE,0xCA,0xAA,0xAB,0x80,0x0,0x1,0xC0,0x0,0x3,0x75,0x55,0x56,0x3F,0xFF,0xFC,};
const byte ElectromignonBack[] PROGMEM = {24,24,0x7F,0x8F,0xF0,0x50,0xA8,0x50,0x70,0xA8,0x70,0x0,0xF8,0x0,0x0,0x84,0xC,0x81,0x2,0x18,0xC1,0x2,0x30,0x60,0x84,0x20,0x3B,0x4B,0x40,0xC,0x30,0x80,0x4,0x0,0x80,0x2,0x69,0x0,0x3,0x4B,0x0,0x4,0x84,0x80,0x4,0x48,0x80,0x2,0x1,0x0,0x3,0x3,0x0,0x4,0x78,0x80,0x4,0x48,0x80,0x2,0xCD,0x0,0x1,0x4A,0x0,0x1,0x4A,0x0,0x1,0x4A,0x0,0x1,0xCE,0x0,};
const byte ElectromignonFront[] PROGMEM = {24,24,0x7F,0x8F,0xF0,0x50,0xA8,0x50,0x70,0xA8,0x70,0x0,0xF8,0x0,0x0,0x84,0x0,0x81,0x4A,0x4,0xC1,0x2,0x8,0x60,0xB4,0x18,0x33,0x4B,0x60,0xC,0x30,0x80,0x4,0x0,0x80,0x2,0x49,0x0,0x2,0xB5,0x0,0x4,0x84,0x80,0x4,0x48,0x80,0x2,0x31,0x0,0x3,0x3,0x0,0x4,0x78,0x80,0x4,0x48,0x80,0x2,0xCD,0x0,0x1,0x4A,0x0,0x1,0x4A,0x0,0x1,0x4A,0x0,0x1,0xCE,0x0,};
const byte FlottilleBack[] PROGMEM = {24,22,0x0,0x30,0x0,0x0,0x3C,0x0,0xE0,0x27,0x0,0x98,0x20,0x80,0x8E,0x23,0xE0,0x83,0x3C,0x38,0x91,0xD8,0x3C,0x98,0xF0,0x1E,0x4C,0xB0,0x13,0x64,0xC0,0x1F,0x26,0x60,0xD,0x22,0x20,0x3,0x22,0x67,0xE2,0x62,0xEC,0x62,0x46,0x88,0xC4,0x4C,0xC9,0x84,0x88,0xE7,0xC,0x99,0xB0,0x38,0x9B,0x98,0xF0,0x8E,0xF,0x80,0xB8,0x0,0x0,0xE0,0x0,0x0,};
const byte FlottilleFront[] PROGMEM = {24,22,0x0,0xC,0x0,0x0,0x3C,0x0,0x0,0xE4,0x7,0x1,0x4,0x19,0x7,0xC4,0x71,0x1C,0x3C,0xC1,0x3C,0x1B,0x89,0x70,0xF,0x19,0xC6,0xD,0x32,0x8A,0x3,0x26,0x86,0x6,0x64,0xF0,0x34,0x44,0xD8,0x56,0x44,0x88,0x97,0x46,0x89,0x11,0x62,0x99,0xF3,0x32,0xF0,0x7,0x11,0xC0,0xD,0x99,0x7F,0x19,0xD9,0x1D,0xF0,0x71,0x0,0x0,0x1D,0x0,0x0,0x7,};
const byte LapiDodoBack[] PROGMEM = {24,20,0x3C,0x7,0x80,0x24,0x4,0x80,0x42,0x8,0x40,0x5A,0xB,0x40,0x5A,0xB,0x40,0x5A,0xEB,0x40,0x5B,0x1B,0x40,0x58,0x3,0x40,0x46,0xC,0x40,0x4C,0xE6,0x40,0x48,0x2,0x40,0x40,0x0,0x40,0x3F,0xFF,0x80,0x62,0x50,0xE0,0x9A,0x53,0x90,0xCE,0x5E,0x30,0x86,0x58,0x10,0xC0,0x0,0x30,0x80,0xE0,0x10,0xFF,0x1F,0xF0,};
const byte LapiDodoFront[] PROGMEM = {24,20,0x3C,0x7,0x80,0x24,0x4,0x80,0x42,0x8,0x40,0x5A,0xB,0x40,0x5A,0xB,0x40,0x42,0xE8,0x40,0x43,0x18,0x40,0x5E,0xF,0x40,0x4A,0xA,0x40,0x4A,0xA,0x40,0x4F,0x1E,0x40,0x40,0x0,0x40,0x3F,0xFF,0x80,0x62,0x50,0xE0,0x9A,0x53,0x90,0xCE,0x5E,0x30,0x86,0x58,0x10,0xC0,0x0,0x30,0x80,0xE0,0x10,0xFF,0x1F,0xF0,};
const byte OctoSpaceBack[] PROGMEM = {24,21,0xC0,0x0,0x18,0xC0,0x0,0x38,0x39,0xFE,0xE0,0xF,0x3,0x80,0x8,0x78,0x80,0x18,0x0,0xC0,0x31,0xFE,0x60,0x20,0x0,0x30,0x23,0xFF,0x10,0x20,0x0,0x10,0x27,0xFF,0x90,0x20,0x0,0x10,0x3F,0xFF,0xF0,0x8,0x94,0x40,0x8,0xB6,0x60,0x19,0xA2,0x20,0x11,0x33,0x20,0x21,0x11,0x30,0x63,0x31,0x90,0x42,0x20,0x90,0xC6,0x30,0xD8,};
const byte OctoSpaceFront[] PROGMEM = {24,21,0xC0,0x0,0x18,0xC0,0x0,0x38,0x39,0xFE,0xE0,0xF,0x3,0x80,0x8,0x0,0x80,0x19,0xFC,0xC0,0x30,0xF8,0x60,0x20,0x70,0x30,0x20,0x20,0x10,0x20,0x0,0x10,0x27,0xFF,0x90,0x21,0x32,0x10,0x3F,0xFF,0xF0,0x8,0x94,0x40,0x8,0xB6,0x60,0x19,0xA2,0x20,0x11,0x33,0x20,0x21,0x11,0x30,0x63,0x31,0x90,0x42,0x20,0x90,0xC6,0x30,0xD8,};
const byte PolsanBack[] PROGMEM = {24,24,0x7,0x38,0x0,0x5,0x28,0x0,0x7,0x38,0x0,0x2,0x10,0x0,0x2,0x10,0x0,0x2,0x10,0x0,0x3,0xF8,0x0,0x7,0x5C,0x0,0x5,0x54,0x0,0x5,0x54,0x0,0x5,0x54,0x0,0x3F,0xFF,0x80,0x40,0x0,0x40,0x3F,0xFF,0x80,0x10,0x1,0x0,0x30,0xA1,0x80,0x60,0x40,0xC0,0x40,0xA0,0x40,0x40,0x0,0x40,0x40,0x0,0x40,0xD4,0x5,0x60,0x88,0x2,0x20,0x94,0x5,0x20,0x80,0x0,0x20,};
const byte PolsanFront[] PROGMEM = {24,24,0x7,0x38,0x0,0x5,0x28,0x0,0x7,0x38,0x0,0x2,0x10,0x0,0x2,0x10,0x0,0x2,0x10,0x0,0x3,0xF8,0x0,0x6,0xC,0x0,0x4,0xA4,0x0,0x4,0x4,0x0,0x4,0x4,0x0,0x3F,0xFF,0x80,0x40,0x0,0x40,0x3F,0xFF,0x80,0x10,0x1,0x0,0x30,0xA1,0x80,0x60,0x40,0xC0,0x40,0xA0,0x40,0x40,0x0,0x40,0x40,0xA0,0x40,0xC0,0x40,0x60,0x80,0xA0,0x20,0x80,0x0,0x20,0xFF,0xFF,0xE0,};
const byte RacinoideBack[] PROGMEM = {16,20,0x5,0x0,0xA,0x80,0x8,0x80,0x5,0x0,0x2,0x0,0x1F,0x80,0x30,0xF0,0x25,0x10,0x28,0x50,0x28,0x50,0x24,0xA0,0x30,0xA0,0x15,0x20,0x1A,0x60,0xD,0x40,0x4,0xC0,0x6,0xB8,0x7D,0xEC,0xC5,0x44,0x89,0x24,};
const byte RacinoideFront[] PROGMEM = {16,20,0x5,0x0,0xA,0x80,0x8,0x80,0x5,0x0,0x2,0x0,0x1F,0x80,0x30,0xF0,0x20,0x10,0x2D,0x90,0x20,0x10,0x22,0x20,0x32,0x20,0x10,0x20,0x18,0x60,0xC,0x40,0x4,0xC0,0x6,0xB8,0x7D,0xEC,0xC5,0x44,0x89,0x24,};
const byte SaloeoyeBack[] PROGMEM = {24,24,0xFF,0xFF,0xE0,0xAA,0xAA,0xA0,0xFF,0xFF,0xE0,0xAB,0xFA,0xA0,0xFF,0xFF,0xE0,0xAB,0xFA,0xA0,0xFF,0xFF,0xE0,0xAA,0xAA,0xA0,0xFF,0xFF,0xE0,0xAA,0xAA,0xA0,0xFF,0xFF,0xE0,0xAA,0xAA,0xA0,0xFF,0xFF,0xE0,0xAA,0xAA,0xA0,0xFF,0xFF,0xE0,0xAA,0xAA,0xA0,0xFF,0xFF,0xE0,0xAA,0xAA,0xA0,0xFF,0xFF,0xE0,0xAA,0xAA,0xA0,0xFF,0xFF,0xE0,0xFF,0xFF,0xE0,0x12,0x9,0x0,0x12,0x9,0x0,};
const byte SaloeoyeFront[] PROGMEM = {24,24,0xFF,0xFF,0xE0,0xAA,0xAA,0xA0,0xFF,0xFF,0xE0,0xAB,0x1A,0xA0,0xFF,0x5F,0xE0,0xAB,0x1A,0xA0,0xFF,0xFF,0xE0,0xAA,0xAA,0xA0,0xFF,0xFF,0xE0,0xA0,0x0,0xA0,0xE7,0xFC,0xE0,0xA6,0xAC,0xA0,0xE5,0xF4,0xE0,0xA7,0x1C,0xA0,0xE5,0x14,0xE0,0xA7,0x1C,0xA0,0xE5,0x14,0xE0,0xA7,0x1C,0xA0,0xE0,0x0,0xE0,0xBF,0xFF,0xA0,0xD5,0x55,0x60,0xFF,0xFF,0xE0,0x12,0x9,0x0,0x12,0x9,0x0,};


const byte* const GetSpriteMonsterByNumero(uint8_t num, bool isFront)
{
	switch(num)
	{
		case 0 : 
                if(isFront) return BigEyesFront;
                return BigEyesBack;
		break;
		case 1 : 
                if(isFront) return ChampiDureFront;
                return ChampiDureBack;
		break;
		case 2 : 
                if(isFront) return DalekomonFront;
                return DalekomonBack;
		break;
		case 3 : 
                if(isFront) return ElectromignonFront;
                return ElectromignonBack;
		break;
		case 4 : 
                if(isFront) return FlottilleFront;
                return FlottilleBack;
		break;
		case 5 : 
                if(isFront) return LapiDodoFront;
                return LapiDodoBack;
		break;
		case 6 : 
                if(isFront) return OctoSpaceFront;
                return OctoSpaceBack;
		break;
		case 7 : 
                if(isFront) return PolsanFront;
                return PolsanBack;
		break;
		case 8 : 
                if(isFront) return RacinoideFront;
                return RacinoideBack;
		break;
		case 9 : 
                if(isFront) return SaloeoyeFront;
                return SaloeoyeBack;
		break;
		
	}
}
/*
const byte* const GetSpriteMonsterByNumero(uint8_t num, bool isFront)
{
	switch(num)
	{
		case 0 : 
                if(isFront) return MechebizardFront;
                return MechebizardBack;
		break;
		case 1 : 
                if(isFront) return FlottilleFront;
                return FlottilleBack;
		break;
		case 2 : 
                if(isFront) return ChampiDureFront;
                return ChampiDureBack;
		break;
		case 3 : 
                if(isFront) return TerrabafleFront;
                return TerrabafleBack;
		break;
		case 4 : 
                if(isFront) return BigFootBotFront;
                return BigFootBotBack;
		break;
		case 5 : 
                if(isFront) return DalekomonFront;
                return DalekomonBack;
		break;
		case 6 : 
                if(isFront) return LapiDodoFront;
                return LapiDodoBack;
		break;
		case 7 : 
                if(isFront) return MantyFront;
                return MantyBack;
		break;
		case 8 : 
                if(isFront) return OctoSpaceFront;
                return OctoSpaceBack;
		break;
		case 9 : 
                if(isFront) return PsymonFront;
                return PsymonBack;
		break;
		case 10 : 
                if(isFront) return ReactoromonFront;
                return ReactoromonBack;
		break;
		case 11 : 
                if(isFront) return BigEyesFront;
                return BigEyesBack;
		break;
		case 12: 
                if(isFront) return BigFootBotFront;
                return BigFootBotBack;
		break;
		case 13 : 
                if(isFront) return BlouyeateFront;
                return BlouyeateBack;
		break;
		case 14 : 
                if(isFront) return ChicFortFront;
                return ChicFortBack;
		break;
		case 15 : 
                if(isFront) return CubeCrocFront;
                return CubeCrocBack;
		break;
		case 16 : 
                if(isFront) return ElectromignonFront;
                return ElectromignonBack;
		break;
		case 17 : 
                if(isFront) return EscargotFront;
                return EscargotBack;
		break;
		case 18 : 
                if(isFront) return GetLineFront;
                return GetLineBack;
		break;
		case 19 : 
                if(isFront) return LapiDodoFront;
                return LapiDodoBack;
		break;
		case 20 : 
                if(isFront) return MittraillatorFront;
                return MittraillatorBack;
		break;
		case 21 : 
                if(isFront) return MonoBotFront;
                return MonoBotBack;
		break;
		case 22 : 
                if(isFront) return PolsanFront;
                return PolsanBack;
		break;
		case 23 : 
                if(isFront) return RacinoideFront;
                return RacinoideBack;
		break;
		case 24 : 
                if(isFront) return SaloeoyeFront;
                return SaloeoyeBack;
		break;
		case 25 : 
                if(isFront) return ChicFortFront;
                return ChicFortBack;
		break;
		case 26 : 
                if(isFront) return VielleBrancheFront;
                return VielleBrancheBack;
		break;
	}
}*/

#endif 

